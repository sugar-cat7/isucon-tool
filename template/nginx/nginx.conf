user www-data;
# CPU数と同じだけプロセスを起動させる(topなどで確認するべき)
# また、cat /proc/sys/fs/file-maxでnginxの動作しているサーバのOSで扱える最大ファイル数
worker_processes auto;
worker_rlimit_nofile 16392; # 仮
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    # 単一のワーカープロセスが開ける最大コネクション数(値を変えてチューニングしてみよう)
    worker_connections 4096; # 仮
    # 一度に複数のコネクションを開始する設定
    multi_accept on;
}

http {
    ##
    # Basic Settings
    ##

    # ファイルの読み込みとレスポンス送信にsendfileシステムコールを利用する
    #  →カーネル空間からユーザ空間へメモリのコピーを行わない
    #   →ファイル送信を効率化できる
    # * ストレージがNFSなどでネットワークマウントされている環境など、特殊な環境下では無効にすべき
    sendfile on;
    # sendfileと一緒に有効化できる
    #  →送信するパケット数を減らして効率よくファイルの送信を行える
    tcp_nopush on;

    types_hash_max_size 2048;
    # server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    ##
    # SSL Settings
    ##

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    ##
    # Logging Settings
    ##
    log_format json escape=json '{"time":"$time_iso8601",'
                                '"host":"$remote_addr",'
                                '"port":$remote_port,'
                                '"method":"$request_method",'
                                '"uri":"$request_uri",'
                                '"status":"$status",'
                                '"body_bytes":$body_bytes_sent,'
                                '"referer":"$http_referer",'
                                '"ua":"$http_user_agent",'
                                '"request_time":"$request_time",'
                                '"response_time":"$upstream_response_time"}';

        access_log /var/log/nginx/access.log json;
        error_log /var/log/nginx/error.log;

        ##
        # Gzip Settings
        ##

        gzip on;

        # gzip_vary on;

        # gzip_proxied any;

        # 圧縮レベル: 大きいほど圧縮率が高い、しかし時間はかかる
        # →適切な圧縮レベルはアプリごとに異なる→何度か試す価値あり
        gzip_comp_level 6;

        # gzip_buffers 16 8k;

        # gzip_http_version 1.1;

        # gzip圧縮するMIMEタイプの指定
        gzip_types text/plain text/xml text/css text/javascript application/json application/javascript application/x-javascript application/xml application/xml+rss;
        # gzip圧縮の対象となる最小のファイルサイズを指定(小さすぎるファイルは圧縮すると逆大きくなる場合があるため)
        gzip_min_length 1k; # default 20, too small


        ##
        # open file cache
        ##
        # キャッシュするファイル数、キャッシュを保持してアクセスを待機する時間
        open_file_cache          max=10000 inactive=5m;
        # キャッシュ有効期間を確認する間隔
        # ベンチマーカーに十分耐えうると考え2mに設定
        open_file_cache_valid    2m;
        # 最小値を与えておく
        open_file_cache_min_uses 1;
        # キャッシュ失敗(404)を検知する設定
        # 開発中はONにしてエラー検知してもいい(任意)
        # *LBとして使う場合はOFFにするべき
        # open_file_cache_errors   on;


        ##
        # Virtual Host Configs
        ##

        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
}
